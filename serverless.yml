service: sra-backend
frameworkVersion: '2'
org: professor
app: sra-backend
provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
  - Effect: "Allow"
    Action:
      - dynamodb:PutItem
      - dynamodb:GetItem
      - dynamodb:UpdateItem
      - dynamodb:Scan
      - dynamodb:DeleteItem
    Resource: arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.DynamoDBTableName}
functions:
  getAllUsers:
    handler: api.handler
    events:
      - http:
          path: users
          method: GET
          cors: true
    environment:
      TABLE_NAME: ${self:custom.DynamoDBTableName}     
  getUser:
    handler: api.handler
    events:
      - http:
          path: users/{id}
          method: GET
          cors: true
    environment:
      TABLE_NAME: ${self:custom.DynamoDBTableName}         
  updateUser:
    handler: api.handler
    events:
      - http:
          path: users/{id}
          method: PUT
          cors: true
    environment:
      TABLE_NAME: ${self:custom.DynamoDBTableName}         
  deleteUser:
    handler: api.handler
    events:
      - http:
          path: users/{id}
          method: DELETE
          cors: true 
    environment:
      TABLE_NAME: ${self:custom.DynamoDBTableName}        
  createUser:
    handler: api.handler
    events:
      - http:
          path: users
          method: POST
          cors: true
    environment:
      TABLE_NAME: ${self:custom.DynamoDBTableName}     
custom:
  DynamoDBTableName: ${self:service}-users-table-${self:provider.stage}
plugins:
  - '@serverless/enterprise-plugin'
  - serverless-pseudo-parameters
resources:
  Resources: 
    myDynamoDBTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        AttributeDefinitions: 
          - AttributeName: user_id
            AttributeType: "S"
        KeySchema: 
          - AttributeName: user_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.DynamoDBTableName}